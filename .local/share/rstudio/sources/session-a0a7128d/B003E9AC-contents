---
title: "TP2_SEM"
output:
  pdf_document:
    latex_engine: xelatex
date: "2025-10-06"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## 1. Représentations tabulaires et graphiques

```{r Données mtcars}
# Charger le jeu de données intégré
data(mtcars)

```

```{r Exercice 1.1}
# 1.1 Tableau de contingence entre 'cyl' et 'am'
tab_cont <- table(mtcars$cyl, mtcars$am)
tab_cont
```

\newpage

```{r Exercice 1.2}
# 1.2 Histogramme des poids ('wt') avec 5 classes (bins)
hist(mtcars$wt, breaks = 5, main = "Histogramme du poids des voitures (wt)", 
     xlab = "Poids (en milliers de livres)",col = "lightblue",border = "white")
```


\newpage

```{r Exercice 1.3}
# 1.3 Diagramme en boîte du poids ('wt')
boxplot(mtcars$wt, main = "Diagramme en boîte du poids des voitures",
        ylab = "Poids (en milliers de livres)", col = "lightgreen")
```

## 2. Corrélation

```{r Données a et w}
# Données
a <- c(11, 15, 23, 46, 52, 75)
w <- c(34, 49, 58, 62, 69, 64)
```

```{r Exercice 2.1}
# 2.1 Formule de corrélation de Pearson

# Calcul "à la main"
cov_aw <- cov(a, w)
sd_a <- sd(a)
sd_w <- sd(w)
r_aw <- cov_aw / (sd_a * sd_w)
r_aw

# Vérification avec la fonction cor()
cor(a, w)
```

\textbf{2.2 Formule de corrélation de Spearman :}

\textbf{Calcul à la main :} On a $d=\sum_{i=1}^6 (r(a_i) - r(w_i))^2 = 2$ avec $r(a_i)$ le rang de la valeur $a_i$ lorsque l'on ordonne la liste $(a_1,a_2,..., a_6)$ par ordre croissant. $r(w_i)$ est défini de façon analogue.

On a donc $$\rho = 1 - 6 \frac{d}{6(6^2-1)} = 1 - \frac{2}{35} = \frac{33}{35} \approx 0,943$$

```{r Exercice 2.2}
# Vérification avec la fonction cor()
cor(a, w, method = "spearman")
```


```{r Exercice 2.3}
# Relation entre âge et poids
plot(a, w, main = "Relation entre l'âge et le poids",
     xlab = "Âge (années)", ylab = "Poids (kg)", pch = 19, col = "blue")

# Optionnel : ajouter une droite de tendance
abline(lm(w ~ a), col = "red", lwd = 2)

```
Peu de données pour un résultat correct mais si on devait examiner quelque chose, on peut voir qu'avec l'âge, le poids augmente et semble commencer à se stabiliser vers la cinquantaine.
\textbf{ATTENTION :} ceci est juste un échantillion de seulement 6 personnes, il faudrait un échantillion beaucoup plus grande pour conclure quoique ce soit. 


## 3. Data Frames


```{r Exercice 3.1}
# Chager le jeu données puis le convertir
state.x77
# Vérifier le type
class(state.x77)

# Conversion si nécessaire
state_df <- as.data.frame(state.x77)

# Vérifier à nouveau
class(state_df)
```

```{r Exercice 3.2}
# Ajouter un attribut "states" avec les noms de lignes
state_df$states <- rownames(state_df)

# Supprimer les noms de lignes
rownames(state_df) <- NULL

# Afficher les 6 premières lignes
head(state_df)

```

```{r Exercice 3.3}
# Filtrer les États selon les deux conditions
etat_filtre <- subset(state_df, Income > 4300 & Population > 1000)

# Nombre d'États
nrow(etat_filtre)

# Liste des États concernés
etat_filtre$states

```

```{r Exercice 3.4}
# Trier les États par revenu décroissant
state_sorted <- state_df[order(-state_df$Income), ]

# Afficher les 5 premiers
head(state_sorted[, c("states", "Income")], 5)
```

```{r Exercice 3.5}
# Créer la variable catégorielle selon les intervalles
state_df$frost_cat <- cut(state_df$Frost,breaks = c(-1, 30, 90, 190),
  labels = c("faible", "intermédiaire", "élevé"))

# Afficher les États de la catégorie "faible"
subset(state_df, frost_cat == "faible", select = c(states, Frost, frost_cat))
```
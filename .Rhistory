demo()
a=c(1,2,3)
a=c(1,2,3)
b=c(4,5,6)
c=c(7,8,9)
mat=cbind(a,b,c)
mat
table0 = read.table("Table0.txt", header = TRUE)
table0 = read.table("Table0.txt", header = TRUE)
table0 = read.table("Table0.txt", header = TRUE)
table0 = read.table("~/venv_jupyter/Table0.txt", header = TRUE)
table0 = read.table("~/Table0.txt", header = TRUE)
View(table0)
table0 = read.table("~/Table0.txt")
View(table0)
colnames(table0) <- c("Nom", "Age", "Taille", "Poids", "Sexe")
View(table0)
rownames(table0) <- table0$Nom
table0$Nom = NULL
table0
table1 = read.table("~/Table1.txt")
View(table1)
table1 =read.table("~/Table1.txt", header = TRUE, stringsAsFactors = FALSE)
table1 =read.table("~/Table1.txt", header = TRUE)
, stringsAsFactors = FALSE
table1$Name = NULL
table1 =read.table("~/Table1.txt", header = TRUE, stringsAsFactors = FALSE)
rownames(table1) <- table1$Name
table1$Name = NULL
# Importer le fichier, lecture des chaînes en caractères (pas facteurs)
df <- read.csv("~/Cereals.csv", stringsAsFactors = FALSE)
View(df)
# Vérifier les premières lignes et la structure
head(df)
str(df)
### a) Ajouter une nouvelle variable "totalcarb" = carbo + sugars
df$totalcarb <- df$carbo + df$sugars
### b) Nombre de céréales "hot"
sum(df$Cold.or.Hot == "H")
### c) Nombre de fournisseurs uniques
length(unique(df$Supplier))
### d) Sous-ensemble uniquement fournisseur "K" (Kellogg's)
df_K <- subset(df, Supplier == "K")
View(df_K)
### e) Sous-ensemble : moins de 80 calories ET plus de 20 vitamines
df_calvi <- subset(df, calories < 80 & vitamins > 20)
View(df_calvi)
### f) Sous-ensemble : au moins 1 sucre,
# ne garder que "Cereal.name", "calories", "vitamins"
df_sugar <- subset(df, sugars >= 1, select = c(Cereal.name, calories, vitamins))
View(df_sugar)
head(df_sugar)
### g) Sauvegarder un sous-ensemble en CSV (ex : df_sugar)
write.csv(df_sugar, "Cereals_sugar.csv", row.names = FALSE)
### h) Renommer la colonne "Supplier" en "Producteur"
names(df)[names(df) == "Supplier"] <- "Producteur"
rm(list = ls())
### Charger le jeu de données
data("islands")
force(islands)
### Nombre total d'observations
length(islands)
### Description rapide
# 'islands' est un vecteur nommé : noms = îles/continents, valeurs = superficie (en milliers de miles²)
head(islands)
### Mesures de tendance centrale
mean(islands)     # Moyenne
median(islands)   # Médiane
### Range (minimum et maximum)
range(islands)           # min et max
max(islands)             # plus grande île
min(islands)             # plus petite île
### Mesures de dispersion
sd(islands)              # Écart-type
quantile(islands, probs = c(0, 0.25, 0.5, 0.75, 1))     # 0%, 25%, 50%, 75%, 100%
quantile(islands, probs = c(0.005, 0.95))               # 0.5% et 95%
### Intervalle interquartile
IQR(islands)
)
### Histogramme
# A. Fréquence
hist(islands, main="Histogramme des îles (fréquence)", xlab="Taille (en milliers de miles²)", col="lightblue")
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq=FALSE)
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq=TRUE)
FALSE
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq=FALSE)
### Diagrammes en boîte
# C. Avec valeurs aberrantes
boxplot(islands, main="Boxplot des îles (avec outliers)", col="orange")
# D. Sans valeurs aberrantes
boxplot(islands, outline=FALSE, main="Boxplot des îles (sans outliers)", col="pink")
### Histogramme
# A. Fréquence
hist(islands, main="Histogramme des îles (fréquence)", xlab="Taille (en milliers de miles²)", col="lightblue")
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq=FALSE)
### Histogramme
# A. Fréquence
hist(islands, main="Histogramme des îles (fréquence)", xlab="Taille (en milliers de miles²)", col="lightblue")
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq=FALSE)
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", probability = TRUE)
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq = TRUE, probability = TRUE)
hist(islands,
main="Histogramme des îles (proportions)",
xlab="Taille (en milliers de miles²)",
col="lightgreen",
freq=TRUE,           # on garde les effectifs
probability=TRUE)
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq = TRUE)
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq = FALSE)
### Charger le jeu de données
data("islands")
### Nombre total d'observations
length(islands)
### Description rapide
# 'islands' est un vecteur nommé : noms = îles/continents, valeurs = superficie (en milliers de miles²)
head(islands)
### Mesures de tendance centrale
mean(islands)     # Moyenne
median(islands)   # Médiane
### Range (minimum et maximum)
range(islands)           # min et max
max(islands)             # plus grande île
min(islands)             # plus petite île
### Mesures de dispersion
sd(islands)              # Écart-type
quantile(islands, probs = c(0, 0.25, 0.5, 0.75, 1))     # 0%, 25%, 50%, 75%, 100%
quantile(islands, probs = c(0.005, 0.95))               # 0.5% et 95%
### Intervalle interquartile
IQR(islands)
### Histogramme
# A. Fréquence
hist(islands, main="Histogramme des îles (fréquence)", xlab="Taille (en milliers de miles²)", col="lightblue")
# B. Proportion
hist(islands, main="Histogramme des îles (proportion)", xlab="Taille (en milliers de miles²)", col="lightgreen", freq = FALSE)
### Diagrammes en boîte
# C. Avec valeurs aberrantes
boxplot(islands, main="Boxplot des îles (avec outliers)", col="orange")
# D. Sans valeurs aberrantes
boxplot(islands, outline=FALSE, main="Boxplot des îles (sans outliers)", col="pink")
### Diagrammes en boîte
# C. Avec valeurs aberrantes
boxplot(islands, main="Boxplot des îles (avec outliers)", col="orange")
# D. Sans valeurs aberrantes
boxplot(islands, outline=FALSE, main="Boxplot des îles (sans outliers)", col="pink")
# Charger le jeu de données "sales"
data("sales")   # si c'est un dataset intégré
# Charger le jeu de données "sales"
sales = read.csv("~/yearly_sales.csv", stringsAsFactors = FALSE)
View(sales)
# Créer la variable catégorielle
sales$spender <- cut(sales$sales_totals, breaks = c(-Inf, 100, 500, Inf), labels = c("small", "medium", "big"), right = FALSE, ordered_result = TRUE)
# Créer la variable catégorielle
sales$spender = cut(sales$sales_totals, breaks = c(-min(sales$sales_totals), 100, 500, max(sales$sales_totals)), labels = c("small", "medium", "big"), right = FALSE, ordered_result = TRUE)
# Créer la variable catégorielle
sales$spender = cut(sales$sales_totals, breaks = c(0, 100, 500, 7607), labels = c("small", "medium", "big"), right = FALSE, ordered_result = TRUE)
sales$spender <- cut(sales$sales_totals,
breaks = c(-Inf, 100, 500, Inf),   # seuils
labels = c("small", "medium", "big"),
right = FALSE,                    # [100,500) appartient à "medium"
ordered_result = TRUE)
# Charger le jeu de données "sales"
sales = read.csv("~/yealy_sales.csv")
# Charger le jeu de données "sales"
sales = read.csv("~/yearly_sales.csv")
sales$spender <- cut(sales$sales_totals,
breaks = c(-Inf, 100, 500, Inf),   # seuils
labels = c("small", "medium", "big"),
right = FALSE,                    # [100,500) appartient à "medium"
ordered_result = TRUE)
, stringsAsFactors = FALSE
# Charger le jeu de données "sales"
sales = read.csv("~/yealy_sales.csv", stringsAsFactors = FALSE)
# Charger le jeu de données "sales"
sales = read.csv("~/yearly_sales.csv", stringsAsFactors = FALSE)
str(sales$sales_totals)
sales$spender <- cut(sales$sales_total,
breaks = c(-Inf, 100, 500, Inf),   # seuils
labels = c("small", "medium", "big"),
right = FALSE,                    # [100,500) appartient à "medium"
ordered_result = TRUE)
# Créer la variable catégorielle
sales$spender <- cut(sales$sales_total, breaks = c(-Inf, 100, 500, Inf), labels = c("small", "medium", "big"), right = FALSE, ordered_result = TRUE)
str(sales$sales_total)
# Vérifier le résultat
head(sales)
str(sales)
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
#Exercice 1
a=c(1,2,3)
b=c(4,5,6)
c=c(7,8,9)
mat=cbind(a,b,c)
#Exercice 2
table0 = read.table("~/Table0.txt")
colnames(table0) <- c("Nom", "Age", "Taille", "Poids", "Sexe")
rownames(table0) <- table0$Nom
table0$Nom = NULL
table0
rm(list = ls())
table1 = read.table("~/Table1.txt")
View(table1)
rm(list = ls())
# Importer le fichier, lecture des chaînes en caractères (pas facteurs)
df <- read.csv("~/Cereals.csv", stringsAsFactors = FALSE)
View(df)
table0 = read.table("~/Table0.txt")
colnames(table0) <- c("Nom", "Age", "Taille", "Poids", "Sexe")
rownames(table0) <- table0$Nom
table0$Nom = NULL
table0
table1 = read.table("~/Table1.txt")
table1 =read.table("~/Table1.txt", header = TRUE, stringsAsFactors = FALSE)
rownames(table1) <- table1$Name
table1$Name = NULL
table1
rm(list = ls())
### Charger le jeu de données
island = data("islands")
read.csv(island)
island
islands### Nombre total d'observations
rm(list = ls())
### Charger le jeu de données
data("islands")
### Nombre total d'observations
length(islands)
### Description rapide
# 'islands' est un vecteur nommé : noms = îles/continents, valeurs = superficie (en milliers de miles²)
head(islands)
### Mesures de tendance centrale
mean(islands)     # Moyenne
median(islands)   # Médiane
### Range (minimum et maximum)
range(islands)           # min et max
max(islands)             # plus grande île
islands[which.max(islands)]          # plus grande île
islands[which.min(islands)]            # plus petite île
### Range (minimum et maximum)
islands[which.range(islands)]          # min et max
### Mesures de dispersion
sd(islands)              # Écart-type
quantile(islands, probs = c(0, 0.25, 0.5, 0.75, 1))     # 0%, 25%, 50%, 75%, 100%
quantile(islands, probs = c(0.005, 0.95))               # 0.5% et 95%
### Intervalle interquartile
IQR(islands)
a=c(1,2,3)
b=c(4,5,6)
c=c(7,8,9)
a,b,c
a , b , c
print(a,b,c)
print(a)
print(b)
rm(list = ls())
head(df)
df <- read.csv("~/Cereals.csv", stringsAsFactors = FALSE)
View(df)
latex::install latex
latex::install_latex()
output:
bookdown::pdf_document2:
latex_engine: lualatex
